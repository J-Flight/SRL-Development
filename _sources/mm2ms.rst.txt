
Minimap to Mainscreen
=====================
The core for our minimap to mainscreen projection.
Supports rotation, and zoom, and resizable client.

MM2MS extends the Minimap interface as well as the mainscreen interface with
functionality to convert coordinates to & from the minimap to the mainscreen.


------------

type TMM2MS
~~~~~~~~~~~
.. code-block:: pascal

 
  type
    TMM2MS = record
      BASE_W, BASE_H: Int32;        // the size of the area we project to (mainscreen size)
      MainScreen.Middle.X, MainScreen.Middle.Y: Int32;            // the center of the area we project to (mainscreen center)
      MMCX, MMCY: Int32;            // the center of the area we project from (minimap center)
      SCALE_MIN, SCALE_MAX: Double; // direct zoom (relates to BASE)
      ZOOM: Double;                 // current zoom
      YSHIFT: Double;               // zooming may cause mid-Y to shift
    end;
   
The comments explains it. This is the datastructure MM2MS uses.


------------

var MM2MS
~~~~~~~~~
.. code-block:: pascal


  var MM2MS: TMM2MS;

The global variable which you would refer to.


------------

Minimap
------------------------------------------------------
Extend the minimap-functionality with MM2MS functions


------------

Minimap.ArrToMs
~~~~~~~~~~~~~~~
.. code-block:: pascal

 
  function TRSMinimap.ArrToMs(Arr: Vector3Array; Roll:Single=$FFFF): TPointArray; overload;
  function TRSMinimap.ArrToMs(Arr: TPointArray; Roll:Single=$FFFF): TPointArray; overload;

Takes array of points on the minimap, returns mainscreen projected array of points.
The first method takes a vector3 array as input, so we can pass height as well, and more detailed coordinates to scale.


------------

Minimap.VecToMs
~~~~~~~~~~~~~~~
.. code-block:: pascal

 function TRSMinimap.VecToMs(Vec: Vector3; Roll:Single=$FFFF): TPoint;

Takes a single coordinate as a Vector3 on the minimap, and converts it to a point on the mainscreen.

*ROLL is the compass angle, by leaving it default it will gather the compass angle itself.*


------------

Minimap.PointToMs
~~~~~~~~~~~~~~~~~
.. code-block:: pascal

 function TRSMinimap.PointToMs(PT: TPoint; Roll:Single=$FFFF): TPoint;

Takes a single coordinate as a TPoint on the minimap, and converts it to a point on the mainscreen.

*ROLL is the compass angle, by leaving it default it will gather the compass angle itself.*


------------

Minimap.VecToMsRect
~~~~~~~~~~~~~~~~~~~
.. code-block:: pascal

 function TRSMinimap.VecToMsRect(Vec: Vector3; Roll:Single=$FFFF): TRectangle;

Takes a single coordinate as a Vector3 on the minimap, and converts it to a rectangle / tile on the mainscreen.

*ROLL is the compass angle, by leaving it default it will gather the compass angle itself.*


------------

Minimap.PointToMsRect
~~~~~~~~~~~~~~~~~~~~~
.. code-block:: pascal

 function TRSMinimap.PointToMsRect(PT: TPoint; Roll:Single=$FFFF): TRectangle;

Takes a single coordinate as a TPoint on the minimap, and converts it to a rectangle / tile on the mainscreen.

*ROLL is the compass angle, by leaving it default it will gather the compass angle itself.*


------------

Minimap.VecToMsBox
~~~~~~~~~~~~~~~~~~
.. code-block:: pascal

 function TRSMinimap.VecToMsBox(Vec: Vector3; Roll:Single=$FFFF): TBox;

Takes a single coordinate as a Vector3 on the minimap, and converts it to a rough box on the mainscreen.

*ROLL is the compass angle, by leaving it default it will gather the compass angle itself.*


------------

Minimap.VecToMsBox
~~~~~~~~~~~~~~~~~~
.. code-block:: pascal

 function TRSMinimap.PointToMsBox(PT: TPoint; Roll:Single=$FFFF): TBox;

Takes a single coordinate as a TPoint on the minimap, and converts it to a rough box on the mainscreen.

*ROLL is the compass angle, by leaving it default it will gather the compass angle itself.*


------------

Minimap.StaticToMsRect
~~~~~~~~~~~~~~~~~~~~~~
.. code-block:: pascal

 function TRSMinimap.StaticToMsRect(StaticMMPoint: TPoint; Height:Int32=0): TRectangle;

Takes static minimap coordinate, rotates it to compass angle, and returns a rectangle on the mainscreen
The static point is therefor gathered at north, and it will rotate it as expected.


------------

Minimap.StaticToMs
~~~~~~~~~~~~~~~~~~
.. code-block:: pascal

 function TRSMinimap.StaticToMs(StaticMMPoint: TPoint; Height:Int32=0): TPoint;

This is the same as the above, only that it returns a single point on the mainscreen.


------------

Mainscreen
-------------------------------------------------------
Extend the mainscreen-functionality with MS2MM function


------------

Mainscreen.PointToMM
~~~~~~~~~~~~~~~~~~~~
.. code-block:: pascal

 function TRSMainScreen.PointToMM(MS: TPoint; Height: Int32=0; Accuracy:Double=0.2): Vector3;

Takes a mainscreen point and converts it to a point on the minimap.

Returns a Vector3 which includes input height. Conversion to a TPoint if that's what you need is simply 
done by calling `.ToPoint` on the result.

Example
-------
.. code-block:: pascal  

  WriteLn Mainscreen.PointToMM(Point(250,140), 2);
  WriteLn Mainscreen.PointToMM(Point(250,140), 2).ToPoint(); // as a TPoint (lost accuracy)


------------

MainScreen.ConvertDistance
~~~~~~~~~~~~~~~~~~~~~~~~~~
.. code-block:: pascal

 function TRSMainScreen.ConvertDistance(Dist: Int32; Accuracy: Single = 1.05): Int32;

Converts a distance acquired from the **fixed client* and **default zoom** to the
current mainscreen.

Example
-------
.. code-block:: pascal  

  // 20 pixels on the fixed client and default zoom(50) is currently x pixels at the current zoom & client size.
  WriteLn(MainScreen.TranslateDistance(20));


------------

MainScreen.GetPlayerBox
~~~~~~~~~~~~~~~~~~~~~~~
.. code-block:: pascal

 function TRSMainScreen.GetPlayerBox: TBox;

Returns a box surrounding our player. Works at any zoom level.


------------

MainScreen.FacePoint
~~~~~~~~~~~~~~~~~~~~
.. code-block:: pascal

 function TRSMainScreen.FacePoint(P: TPoint; Randomness: Int32 = 0): Boolean;

Rotates the camera to face point `P`.


------------

Options.SetZoomLevel
~~~~~~~~~~~~~~~~~~~~
.. code-block:: pascal

 function TRSOptions.SetZoomLevel(Level: Int32): Boolean; override;

Override to automatically update MM2MS.ZoomLevel.


------------
